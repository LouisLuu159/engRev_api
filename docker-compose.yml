version: '3.7'

services:
  api:
    build:
      dockerfile: Dockerfile
      context: .
    volumes:
      - .:/usr/src/app
    env_file:
      - .env
    command: yarn start:dev
    ports:
      - 5000:5000
    networks:
      - eng_rev
    depends_on:
      - redis
      - postgres

  redis:
    image: 'redis:alpine'
    volumes:
      - ./docker/redis:/data
    ports:
      - '6379:6379'
    networks:
      - eng_rev

  postgres:
    image: postgres
    container_name: eng_rev_db
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - ${DB_PUBLISHED_PORT}:5432
    volumes:
      - ./docker/postgres:/var/lib/postgresql/data
    networks:
      - eng_rev

  mailhog:
    image: mailhog/mailhog
    logging:
      driver: 'none' # disable saving logs
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui
    networks:
      - eng_rev

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
    container_name: elasticsearch
    restart: always
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - eng_rev

  kibana:
    image: docker.elastic.co/kibana/kibana:7.4.0
    links:
      - elasticsearch
    environment:
      - ELASTICSEARCH_USERNAME=${ELASTIC_USERNAME}
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
    ports:
      - 5601:5601
    networks:
      - eng_rev

networks:
  eng_rev:
    driver: bridge

volumes:
  redis:
    driver: local
  esdata:
    driver: local
    driver_opts:
      type: none
      device: ./elasticsearch
      o: bind
  postgres:
